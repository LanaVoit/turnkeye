<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Tests" duration-ms="3990" started-at="2015-01-14T09:19:35Z" finished-at="2015-01-14T09:19:39Z">
    <groups>
    </groups>
    <test name="Test1" duration-ms="3990" started-at="2015-01-14T09:19:35Z" finished-at="2015-01-14T09:19:39Z">
      <class name="home.JS_error$Email">
        <test-method status="PASS" signature="init()[pri:0, instance:home.JS_error$Email@6b143ee9]" name="init" is-config="true" duration-ms="3916" started-at="2015-01-14T13:19:35Z" finished-at="2015-01-14T13:19:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testUntitled2(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.JS_error$Email@6b143ee9]" name="testUntitled2" duration-ms="8" started-at="2015-01-14T13:19:39Z" data-provider="hardCodedBrowsers" finished-at="2015-01-14T13:19:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 8.1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[No enum constant org.openqa.selenium.Platform.Windows 8.1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: No enum constant org.openqa.selenium.Platform.Windows 8.1
	at java.lang.Enum.valueOf(Enum.java:238)
	at org.openqa.selenium.Platform.valueOf(Platform.java:1)
	at org.openqa.selenium.remote.DesiredCapabilities.setCapability(DesiredCapabilities.java:168)
	at home.JS_error$Email.createDriver(JS_error.java:48)
	at home.JS_error$Email.testUntitled2(JS_error.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUntitled2 -->
      </class> <!-- home.JS_error$Email -->
      <class name="home.JS_error">
        <test-method status="PASS" signature="tearDown()[pri:0, instance:home.JS_error@614c5515]" name="tearDown" is-config="true" duration-ms="1" started-at="2015-01-14T13:19:39Z" finished-at="2015-01-14T13:19:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- home.JS_error -->
    </test> <!-- Test1 -->
  </suite> <!-- Tests -->
</testng-results>
